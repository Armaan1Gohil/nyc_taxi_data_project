services:

  object-storage:
    build:
      context: ./minio_data
      dockerfile: minio.Dockerfile
    container_name: storage
    volumes:
      - ./minio_data:/data_project/data:rw
    ports:
      - 9000:9000
      - 9001:9001
    env_file:
      - .env/minio.env
    stdin_open: True
    tty: True
    restart: always

  extraction:
    build:
      context: ./ingestion
      dockerfile: ingestion.Dockerfile
    container_name: extraction
    volumes:
      - ./ingestion:/data_project/ingestion:rw
      - ./raw_data:/data_project/raw_data:rw
      - ./logs/:/data_project/logs:rw
    ports:
      - 8888:8888
    env_file:
      - .env/minio.env
    stdin_open: true
    tty: true
    depends_on:
      - object-storage

  # mysql:
  #   image: mysql:8.0
  #   container_name: mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: metastorepassword
  #     MYSQL_DATABASE: metastore_db
  #     MYSQL_USER: metastore_user
  #     MYSQL_PASSWORD: metastorepassword
  #   volumes:
  #     - mysql_data:/var/lib/mysql
  #   ports:
  #     - "3306:3306"
  #   restart: always

  transformation:
    build:
      context: ./transformation
      dockerfile: transformation.Dockerfile
    container_name: transformation
    volumes:
      - ./transformation:/data_project/transformation:rw
      - ./raw_data:/data_project/raw_data:rw
      - ./logs/:/data_project/logs:rw
    ports:
      - 8889:8888
      - 4040:4040
      - 7070:7070
    env_file:
      - .env/spark.env
      - .env/minio.env
    environment:
      MINIO_ROOT_USER: root
      MINIO_ROOT_PASSWORD: password
    stdin_open: true
    tty: true
    restart: always
    depends_on:
      - object-storage
      - extraction

  # trino:
  #   hostname: trino
  #   container_name: sql-engine
  #   image: 'trinodb/trino:351'
  #   ports:
  #     - '8086:8080'
  #   volumes:
  #     - ./etc:/usr/lib/trino/etc:ro
  #   depends_on:
  #     - object-storage
  #     - extraction
  #     - warehouse